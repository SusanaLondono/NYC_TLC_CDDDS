{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"5_Modelo _RandomForest_PySpark ","provenance":[],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"PUYS1r5W9SPB"},"source":["# Random Forest (PySpark)\n","\n","El objetivo de este notebook es explorar el modelo random forest en PySpark para lograr escalarlo posteriormente."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CXzw9mjamAL8","executionInfo":{"status":"ok","timestamp":1622000451033,"user_tz":300,"elapsed":4336,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"2a97731b-32f2-4bba-bb7d-01ea53350ca9"},"source":["!apt-get update"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\r0% [Working]\r            \rHit:1 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ InRelease\n","\r0% [Connecting to archive.ubuntu.com (91.189.88.152)] [Waiting for headers] [Co\r0% [1 InRelease gpgv 3,626 B] [Connecting to archive.ubuntu.com (91.189.88.152)\r                                                                               \rHit:2 http://security.ubuntu.com/ubuntu bionic-security InRelease\n","\r0% [1 InRelease gpgv 3,626 B] [Connecting to archive.ubuntu.com (91.189.88.152)\r                                                                               \rIgn:3 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease\n","\r                                                                               \r0% [1 InRelease gpgv 3,626 B] [Waiting for headers] [Waiting for headers]\r                                                                         \rIgn:4 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","Hit:5 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release\n","Hit:6 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release\n","Hit:7 http://archive.ubuntu.com/ubuntu bionic InRelease\n","Hit:8 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic InRelease\n","Hit:9 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\n","Hit:10 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\n","Hit:11 http://ppa.launchpad.net/cran/libgit2/ubuntu bionic InRelease\n","Hit:12 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic InRelease\n","Hit:15 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease\n","Reading package lists... Done\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L2f1_WETj0dW","executionInfo":{"status":"ok","timestamp":1622000453247,"user_tz":300,"elapsed":2225,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"648cbcee-5f4f-4248-af53-04cf47666418"},"source":["import os #importing os to set environment variable\n","!apt-get install -y openjdk-8-jdk-headless -qq > /dev/null #install openjdk\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\" #set environment variable\n","!java -version\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["openjdk version \"11.0.11\" 2021-04-20\n","OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.18.04)\n","OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.18.04, mixed mode, sharing)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4tDWdUpKi1Ld","executionInfo":{"status":"ok","timestamp":1622000459191,"user_tz":300,"elapsed":5952,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"0d136baf-8cc4-4e11-e4fb-7b111b1ab069"},"source":["!pip install pyspark\n","!pip install -U -q PyDrive"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pyspark in /usr/local/lib/python3.7/dist-packages (3.1.1)\n","Requirement already satisfied: py4j==0.10.9 in /usr/local/lib/python3.7/dist-packages (from pyspark) (0.10.9)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gcSR3qPk9UTm"},"source":["from pyspark.sql.types import *\n","from pyspark.sql import *\n","from pyspark.sql.functions import *\n","from pyspark import SparkContext\n","from pyspark import SQLContext\n","\n","# create the Spark Session\n","spark = SparkSession.builder.getOrCreate()\n","\n","# create the Spark Context\n","sc = spark.sparkContext\n","\n","sqlContext = SQLContext(sc)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Gk22_jWDxdW5"},"source":["from pyspark.ml.feature import StringIndexer\n","from pyspark.ml.feature import VectorAssembler\n","from pyspark.ml.feature import StandardScaler\n","from pyspark.ml.feature import ChiSqSelector"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"myJzdNlIsxgX"},"source":["# Imports \n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import matplotlib.dates as mdates\n","import time\n","\n","import pyspark.sql.functions as F\n","\n","from pyspark.sql import SQLContext\n","from pyspark.sql import types\n","from pyspark.sql.functions import isnan, when, count, col\n","from pyspark.ml.regression import LinearRegression\n","from pyspark.ml import Pipeline\n","from pyspark.ml.tuning import CrossValidator, ParamGridBuilder\n","from pyspark.ml.evaluation import RegressionEvaluator\n","from pyspark.sql.functions import to_timestamp\n","from pyspark.sql.types import StructType\n","\n","%matplotlib inline\n","plt.style.use('ggplot')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xWm-g1khFoE-"},"source":["###Cargar el archivo: all_sample_models.csv\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"feSYprFRnj75","executionInfo":{"status":"ok","timestamp":1622000464801,"user_tz":300,"elapsed":14,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"c4fbfa9f-988e-4db2-89c5-8ec4110560f7"},"source":["#cargar archivo de datos\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Y3dqUq0xzPVS"},"source":["archivo = r'/content/drive/MyDrive/Mineria/CDDDS_NYC_Taxi/datos/all_sample.csv'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mw-aMrjQz_MG"},"source":["#eschema de las variables\n","schema = StructType() \\\n","      .add(\"VendorID\",StringType(),True) \\\n","      .add(\"tpep_pickup_datetime\",TimestampType(),True) \\\n","      .add(\"tpep_dropoff_datetime\",TimestampType(),True) \\\n","      .add(\"Passenger_count\",IntegerType(),True) \\\n","      .add(\"trip_distance\",DoubleType(),True) \\\n","      .add(\"RatecodeID\",StringType(),True) \\\n","      .add(\"store_and_fwd_flag\",StringType(),True) \\\n","      .add(\"PULocationID\",StringType(),True) \\\n","      .add(\"DOLocationID\",StringType(),True) \\\n","      .add(\"payment_type\",StringType(),True) \\\n","      .add(\"fare_amount\",DoubleType(),True) \\\n","      .add(\"extra\",DoubleType(),True) \\\n","      .add(\"mta_tax\",DoubleType(),True) \\\n","      .add(\"tip_amount\",DoubleType(),True) \\\n","      .add(\"tolls_amount\",DoubleType(),True) \\\n","      .add(\"improvement_surcharge\",DoubleType(),True) \\\n","      .add(\"total_amount\",DoubleType(),True) \\\n","      .add(\"pu_borough\",StringType(),True) \\\n","      .add(\"pu_zone\",StringType(),True) \\\n","      .add(\"pu_service_zone\",StringType(),True) \\\n","      .add(\"do_borough\",StringType(),True) \\\n","      .add(\"do_zone\",StringType(),True) \\\n","      .add(\"do_service_zone\",StringType(),True) \\\n","      .add(\"elapsed_time\",DoubleType(),True) \\\n","      .add(\"pu_year\",IntegerType(),True) \\\n","      .add(\"pu_month\",IntegerType(),True) \\\n","      .add(\"do_month\",IntegerType(),True) \\\n","      .add(\"pu_day\",IntegerType(),True) \\\n","      .add(\"do_day\",IntegerType(),True) \\\n","      .add(\"pu_hour\",IntegerType(),True) \\\n","      .add(\"do_hour\",IntegerType(),True) \\\n","      .add(\"pu_dayname\",StringType(),True) \\\n","      .add(\"do_dayname\",StringType(),True) \\\n","      .add(\"pu_daynum\",IntegerType(),True) \\\n","      .add(\"peak_hour\",StringType(),True)\n","      \n","df = spark.read.format(\"csv\") \\\n","      .option(\"header\", True) \\\n","      .schema(schema) \\\n","      .load(archivo)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sMjcGSL_Eul0","executionInfo":{"status":"ok","timestamp":1622000468574,"user_tz":300,"elapsed":41,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"db84edb5-134f-40eb-d7e4-c0dc97398989"},"source":["df.printSchema()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["root\n"," |-- VendorID: string (nullable = true)\n"," |-- tpep_pickup_datetime: timestamp (nullable = true)\n"," |-- tpep_dropoff_datetime: timestamp (nullable = true)\n"," |-- Passenger_count: integer (nullable = true)\n"," |-- trip_distance: double (nullable = true)\n"," |-- RatecodeID: string (nullable = true)\n"," |-- store_and_fwd_flag: string (nullable = true)\n"," |-- PULocationID: string (nullable = true)\n"," |-- DOLocationID: string (nullable = true)\n"," |-- payment_type: string (nullable = true)\n"," |-- fare_amount: double (nullable = true)\n"," |-- extra: double (nullable = true)\n"," |-- mta_tax: double (nullable = true)\n"," |-- tip_amount: double (nullable = true)\n"," |-- tolls_amount: double (nullable = true)\n"," |-- improvement_surcharge: double (nullable = true)\n"," |-- total_amount: double (nullable = true)\n"," |-- pu_borough: string (nullable = true)\n"," |-- pu_zone: string (nullable = true)\n"," |-- pu_service_zone: string (nullable = true)\n"," |-- do_borough: string (nullable = true)\n"," |-- do_zone: string (nullable = true)\n"," |-- do_service_zone: string (nullable = true)\n"," |-- elapsed_time: double (nullable = true)\n"," |-- pu_year: integer (nullable = true)\n"," |-- pu_month: integer (nullable = true)\n"," |-- do_month: integer (nullable = true)\n"," |-- pu_day: integer (nullable = true)\n"," |-- do_day: integer (nullable = true)\n"," |-- pu_hour: integer (nullable = true)\n"," |-- do_hour: integer (nullable = true)\n"," |-- pu_dayname: string (nullable = true)\n"," |-- do_dayname: string (nullable = true)\n"," |-- pu_daynum: integer (nullable = true)\n"," |-- peak_hour: string (nullable = true)\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MidHw0goCkDH","executionInfo":{"status":"ok","timestamp":1622000472917,"user_tz":300,"elapsed":4376,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"a67bff94-0b60-4027-9100-0f271df55417"},"source":["df.show(10)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["+--------+--------------------+---------------------+---------------+-------------+----------+------------------+------------+------------+------------+-----------+-----+-------+----------+------------+---------------------+------------+----------+--------------------+---------------+----------+--------------------+---------------+------------+-------+--------+--------+------+------+-------+-------+----------+----------+---------+---------+\n","|VendorID|tpep_pickup_datetime|tpep_dropoff_datetime|Passenger_count|trip_distance|RatecodeID|store_and_fwd_flag|PULocationID|DOLocationID|payment_type|fare_amount|extra|mta_tax|tip_amount|tolls_amount|improvement_surcharge|total_amount|pu_borough|             pu_zone|pu_service_zone|do_borough|             do_zone|do_service_zone|elapsed_time|pu_year|pu_month|do_month|pu_day|do_day|pu_hour|do_hour|pu_dayname|do_dayname|pu_daynum|peak_hour|\n","+--------+--------------------+---------------------+---------------+-------------+----------+------------------+------------+------------+------------+-----------+-----+-------+----------+------------+---------------------+------------+----------+--------------------+---------------+----------+--------------------+---------------+------------+-------+--------+--------+------+------+-------+-------+----------+----------+---------+---------+\n","|     2.0| 2018-12-29 08:22:16|  2018-12-29 08:33:05|              1|         1.45|       1.0|                 N|         142|         161|         1.0|        8.5|  0.0|    0.5|      1.86|         0.0|                  0.3|       11.16| Manhattan| Lincoln Square East|    Yellow Zone| Manhattan|      Midtown Center|    Yellow Zone|        11.0|   2018|      12|      12|    29|    29|      8|      8|  Saturday|  Saturday|        6|  No_pico|\n","|     2.0| 2018-12-29 08:09:05|  2018-12-29 08:23:40|              1|         3.22|       1.0|                 N|         234|          43|         2.0|       13.5|  0.0|    0.5|       0.0|         0.0|                  0.3|        14.3| Manhattan|            Union Sq|    Yellow Zone| Manhattan|        Central Park|    Yellow Zone|        15.0|   2018|      12|      12|    29|    29|      8|      8|  Saturday|  Saturday|        6|  No_pico|\n","|     2.0| 2018-12-29 08:54:50|  2018-12-29 09:14:53|              1|         3.72|       1.0|                 N|         161|         114|         2.0|       16.0|  0.0|    0.5|       0.0|         0.0|                  0.3|        16.8| Manhattan|      Midtown Center|    Yellow Zone| Manhattan|Greenwich Village...|    Yellow Zone|        20.0|   2018|      12|      12|    29|    29|      8|      9|  Saturday|  Saturday|        6|  No_pico|\n","|     1.0| 2018-12-29 09:46:07|  2018-12-29 09:50:47|              2|          1.8|       1.0|                 N|         264|         264|         1.0|        7.0|  0.0|    0.5|      1.55|         0.0|                  0.3|        9.35|   Unknown|                  NV|            N/A|   Unknown|                  NV|            N/A|         5.0|   2018|      12|      12|    29|    29|      9|      9|  Saturday|  Saturday|        6|  No_pico|\n","|     1.0| 2018-12-29 09:21:27|  2018-12-29 09:23:39|              1|          0.4|       1.0|                 N|         186|          90|         1.0|        3.5|  0.0|    0.5|       2.0|         0.0|                  0.3|         6.3| Manhattan|Penn Station/Madi...|    Yellow Zone| Manhattan|            Flatiron|    Yellow Zone|         2.0|   2018|      12|      12|    29|    29|      9|      9|  Saturday|  Saturday|        6|  No_pico|\n","|     1.0| 2018-12-29 09:16:01|  2018-12-29 09:32:38|              1|          5.5|       1.0|                 N|         262|          68|         1.0|       18.5|  0.0|    0.5|       2.5|         0.0|                  0.3|        21.8| Manhattan|      Yorkville East|    Yellow Zone| Manhattan|        East Chelsea|    Yellow Zone|        17.0|   2018|      12|      12|    29|    29|      9|      9|  Saturday|  Saturday|        6|  No_pico|\n","|     1.0| 2018-12-29 09:45:32|  2018-12-29 09:50:03|              1|          0.9|       1.0|                 N|         140|         263|         1.0|        5.5|  0.0|    0.5|      1.25|         0.0|                  0.3|        7.55| Manhattan|     Lenox Hill East|    Yellow Zone| Manhattan|      Yorkville West|    Yellow Zone|         5.0|   2018|      12|      12|    29|    29|      9|      9|  Saturday|  Saturday|        6|  No_pico|\n","|     2.0| 2018-12-29 09:08:07|  2018-12-29 09:39:07|              4|        12.11|       1.0|                 N|         138|          61|         1.0|       36.0|  0.0|    0.5|      7.36|         0.0|                  0.3|       44.16|    Queens|   LaGuardia Airport|       Airports|  Brooklyn| Crown Heights North|      Boro Zone|        31.0|   2018|      12|      12|    29|    29|      9|      9|  Saturday|  Saturday|        6|  No_pico|\n","|     2.0| 2018-12-29 09:17:42|  2018-12-29 09:23:20|              1|         1.22|       1.0|                 N|         262|         237|         1.0|        6.5|  0.0|    0.5|      1.46|         0.0|                  0.3|        8.76| Manhattan|      Yorkville East|    Yellow Zone| Manhattan|Upper East Side S...|    Yellow Zone|         6.0|   2018|      12|      12|    29|    29|      9|      9|  Saturday|  Saturday|        6|  No_pico|\n","|     1.0| 2018-12-29 09:44:29|  2018-12-29 09:50:31|              1|          1.4|       1.0|                 N|         170|         237|         1.0|        7.0|  0.0|    0.5|       1.0|         0.0|                  0.3|         8.8| Manhattan|         Murray Hill|    Yellow Zone| Manhattan|Upper East Side S...|    Yellow Zone|         6.0|   2018|      12|      12|    29|    29|      9|      9|  Saturday|  Saturday|        6|  No_pico|\n","+--------+--------------------+---------------------+---------------+-------------+----------+------------------+------------+------------+------------+-----------+-----+-------+----------+------------+---------------------+------------+----------+--------------------+---------------+----------+--------------------+---------------+------------+-------+--------+--------+------+------+-------+-------+----------+----------+---------+---------+\n","only showing top 10 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bRkkWmGj4mNs"},"source":["###Seleccionar variables para los modelos"]},{"cell_type":"code","metadata":{"id":"FTMsfj8ky4OU"},"source":["df_data = df[[\"trip_distance\", \"pu_borough\",\"do_borough\",\"total_amount\",\"pu_hour\",\"pu_dayname\",\"elapsed_time\",\"peak_hour\"]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H8GXzvQS0UDT","executionInfo":{"status":"ok","timestamp":1622000473459,"user_tz":300,"elapsed":571,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"174a1c88-bfa7-4765-94a5-e314b06d2d4d"},"source":["df_data.show(10)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["+-------------+----------+----------+------------+-------+----------+------------+---------+\n","|trip_distance|pu_borough|do_borough|total_amount|pu_hour|pu_dayname|elapsed_time|peak_hour|\n","+-------------+----------+----------+------------+-------+----------+------------+---------+\n","|         1.45| Manhattan| Manhattan|       11.16|      8|  Saturday|        11.0|  No_pico|\n","|         3.22| Manhattan| Manhattan|        14.3|      8|  Saturday|        15.0|  No_pico|\n","|         3.72| Manhattan| Manhattan|        16.8|      8|  Saturday|        20.0|  No_pico|\n","|          1.8|   Unknown|   Unknown|        9.35|      9|  Saturday|         5.0|  No_pico|\n","|          0.4| Manhattan| Manhattan|         6.3|      9|  Saturday|         2.0|  No_pico|\n","|          5.5| Manhattan| Manhattan|        21.8|      9|  Saturday|        17.0|  No_pico|\n","|          0.9| Manhattan| Manhattan|        7.55|      9|  Saturday|         5.0|  No_pico|\n","|        12.11|    Queens|  Brooklyn|       44.16|      9|  Saturday|        31.0|  No_pico|\n","|         1.22| Manhattan| Manhattan|        8.76|      9|  Saturday|         6.0|  No_pico|\n","|          1.4| Manhattan| Manhattan|         8.8|      9|  Saturday|         6.0|  No_pico|\n","+-------------+----------+----------+------------+-------+----------+------------+---------+\n","only showing top 10 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Lq5N5wiUBY3p"},"source":["Se seleccionan los campos NO Dummies"]},{"cell_type":"code","metadata":{"id":"ZvPp0XukBZYk"},"source":["no_dummies_df = df_data[[\"trip_distance\",\"pu_hour\",\"elapsed_time\"]]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WrljT9PJ_QQ9"},"source":["Se seleccionan los campos a ser Dummies"]},{"cell_type":"code","metadata":{"id":"C6raM7vq6nMt"},"source":["df_data_dummies = df_data[[\"pu_borough\",\"do_borough\",\"pu_dayname\",\"peak_hour\"]]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bVmZ9fUi4zl-"},"source":["###Funcion Get_Dummies for PySpark"]},{"cell_type":"code","metadata":{"id":"5KAla6D-4uFJ"},"source":["import itertools\n","\n","def spark_get_dummies(df):\n","    \n","    categories = []\n","    for i, values in enumerate(df.columns):\n","        categories.append(df.select(values).distinct().rdd.flatMap(lambda x: x).collect())\n","        \n","    expressions = []\n","    for i, values in enumerate(df.columns):\n","        expressions.append([F.when(F.col(values) == i, 1).otherwise(0).alias(str(values) + \"_\" + str(i)) for i in categories[i]])\n","    \n","    expressions_flat = list(itertools.chain.from_iterable(expressions))\n","    \n","    df_final = df.select(*expressions_flat)\n","    \n","    return df_final"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hZSPwzxq4jFt","executionInfo":{"status":"ok","timestamp":1622000516021,"user_tz":300,"elapsed":42573,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"a3784e61-5326-45b8-f520-bd349057a2f4"},"source":["dummies_df = spark_get_dummies(df_data_dummies)\n","dummies_df.show(10)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+--------------------+------------------+-----------------+-------------------+-------------------+-----------------+-----------------+-----------------+-----------------+-----------------+\n","|pu_borough_Queens|pu_borough_EWR|pu_borough_Unknown|pu_borough_Brooklyn|pu_borough_Staten Island|pu_borough_Manhattan|pu_borough_Bronx|do_borough_Queens|do_borough_EWR|do_borough_Unknown|do_borough_Brooklyn|do_borough_Staten Island|do_borough_Manhattan|do_borough_Bronx|pu_dayname_Wednesday|pu_dayname_Tuesday|pu_dayname_Friday|pu_dayname_Thursday|pu_dayname_Saturday|pu_dayname_Monday|pu_dayname_Sunday|peak_hour_Pico_PM|peak_hour_No_pico|peak_hour_Pico_AM|\n","+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+--------------------+------------------+-----------------+-------------------+-------------------+-----------------+-----------------+-----------------+-----------------+-----------------+\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","|                0|             0|                 1|                  0|                       0|                   0|               0|                0|             0|                 1|                  0|                       0|                   0|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","|                1|             0|                 0|                  0|                       0|                   0|               0|                0|             0|                 0|                  1|                       0|                   0|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|\n","+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+--------------------+------------------+-----------------+-------------------+-------------------+-----------------+-----------------+-----------------+-----------------+-----------------+\n","only showing top 10 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"nF9AuPOrDDGv"},"source":["Nuevamente se unen los campos dummies y no dummies"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jZT0U-hPDJyC","executionInfo":{"status":"ok","timestamp":1622000532180,"user_tz":300,"elapsed":16189,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"b5f00464-d91d-42bd-eab8-457ee6771f8c"},"source":["no_dummies_df = no_dummies_df.withColumn(\"id\", monotonically_increasing_id())\n","dummies_df = dummies_df.withColumn(\"id\", monotonically_increasing_id())\n","X = dummies_df.join(no_dummies_df, \"id\", \"outer\").drop(\"id\")\n","X.show(10)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+--------------------+------------------+-----------------+-------------------+-------------------+-----------------+-----------------+-----------------+-----------------+-----------------+-------------+-------+------------+\n","|pu_borough_Queens|pu_borough_EWR|pu_borough_Unknown|pu_borough_Brooklyn|pu_borough_Staten Island|pu_borough_Manhattan|pu_borough_Bronx|do_borough_Queens|do_borough_EWR|do_borough_Unknown|do_borough_Brooklyn|do_borough_Staten Island|do_borough_Manhattan|do_borough_Bronx|pu_dayname_Wednesday|pu_dayname_Tuesday|pu_dayname_Friday|pu_dayname_Thursday|pu_dayname_Saturday|pu_dayname_Monday|pu_dayname_Sunday|peak_hour_Pico_PM|peak_hour_No_pico|peak_hour_Pico_AM|trip_distance|pu_hour|elapsed_time|\n","+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+--------------------+------------------+-----------------+-------------------+-------------------+-----------------+-----------------+-----------------+-----------------+-----------------+-------------+-------+------------+\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|         1.04|      9|         3.0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 0|                0|                  0|                  1|                0|                0|                0|                1|                0|         1.98|      9|        12.0|\n","|                1|             0|                 0|                  0|                       0|                   0|               0|                1|             0|                 0|                  0|                       0|                   0|               0|                   0|                 1|                0|                  0|                  0|                0|                0|                0|                1|                0|         1.25|      3|         6.0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 1|                0|                  0|                  0|                0|                0|                0|                1|                0|         3.59|     12|        14.0|\n","|                1|             0|                 0|                  0|                       0|                   0|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 1|                0|                  0|                  0|                0|                0|                0|                1|                0|        18.72|     20|        38.0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 1|                0|                  0|                  0|                0|                0|                0|                1|                0|          0.2|     21|         1.0|\n","|                1|             0|                 0|                  0|                       0|                   0|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   0|                 1|                0|                  0|                  0|                0|                0|                0|                1|                0|        12.48|     22|        24.0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   1|                 0|                0|                  0|                  0|                0|                0|                0|                1|                0|         0.53|      5|         2.0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   1|                 0|                0|                  0|                  0|                0|                0|                0|                1|                0|          0.4|      7|         2.0|\n","|                0|             0|                 0|                  0|                       0|                   1|               0|                0|             0|                 0|                  0|                       0|                   1|               0|                   1|                 0|                0|                  0|                  0|                0|                0|                0|                0|                1|         1.51|      9|         9.0|\n","+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+-----------------+--------------+------------------+-------------------+------------------------+--------------------+----------------+--------------------+------------------+-----------------+-------------------+-------------------+-----------------+-----------------+-----------------+-----------------+-----------------+-------------+-------+------------+\n","only showing top 10 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NwGO7onjljeG"},"source":["##**Random Forest -Regression**\n"]},{"cell_type":"markdown","metadata":{"id":"ywCdmszuwJ-0"},"source":["Adaptado de:\n","https://spark.apache.org/docs/1.6.1/ml-classification-regression.html#random-forest-regression"]},{"cell_type":"markdown","metadata":{"id":"Mth7aKA_xw2E"},"source":["Se requiere que las características estén formateadas como un solo vector. Se toma una lista de columnas que se incluirán en la nueva columna \"características\"."]},{"cell_type":"code","metadata":{"id":"McXymQUbv9dR"},"source":["from pyspark.ml.feature import VectorAssembler\n","feature_list = []\n","for col in X.columns:\n","    if col == 'elapsed_time':\n","        continue\n","    else:\n","        feature_list.append(col)\n","assembler = VectorAssembler(inputCols=feature_list, outputCol=\"features\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"l24Uj4MzlqBV"},"source":["from pyspark.ml.regression import RandomForestRegressor\n","rf = RandomForestRegressor(labelCol=\"elapsed_time\", featuresCol=\"features\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JqcmnLApl_E5"},"source":["from pyspark.ml import Pipeline\n","pipeline = Pipeline(stages=[assembler, rf])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vRFz24Fuym60"},"source":["Se dividen los datos entre entrenamiento y prueba"]},{"cell_type":"code","metadata":{"id":"vJQI8fGbmPkD"},"source":["(trainingData, testData) = X.randomSplit([0.7, 0.3])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZaeWfaKlyxiw"},"source":["Se entrena el modelo"]},{"cell_type":"code","metadata":{"id":"G43CeQSs-pFP"},"source":["model = pipeline.fit(trainingData)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kXVQ4INYzIzO"},"source":["Se realizan las predicciones"]},{"cell_type":"code","metadata":{"id":"hhlgYkz6AYqM"},"source":["predictions = model.transform(testData)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eqFu6-5RzPCv"},"source":["Se muestran comparativamente 10 resultados"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bvR9vchEAdYx","executionInfo":{"status":"ok","timestamp":1622000665828,"user_tz":300,"elapsed":13997,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"a94db339-5d57-400b-d79c-5e53597b9de9"},"source":["predictions.select(\"prediction\", \"elapsed_time\", \"features\").show(15)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["+------------------+------------+--------------------+\n","|        prediction|elapsed_time|            features|\n","+------------------+------------+--------------------+\n","|20.788278158469303|        11.0|(26,[6,13,17,22,2...|\n","|10.466506325576875|         7.0|(26,[6,13,16,22,2...|\n","|18.879539564628594|        16.0|(26,[6,13,15,22,2...|\n","|11.933163088587394|        12.0|(26,[6,12,17,22,2...|\n","| 24.39313077061974|        23.0|(26,[5,13,20,22,2...|\n","|30.755925217427677|        26.0|(26,[5,13,20,22,2...|\n","| 35.98497866472344|        34.0|(26,[5,13,19,21,2...|\n","|26.158005200465304|        22.0|(26,[5,13,18,22,2...|\n","|23.975248758517715|        17.0|(26,[5,13,17,23,2...|\n","|15.406158123324857|         6.0|(26,[5,13,16,23,2...|\n","| 26.54472043768008|        22.0|(26,[5,13,16,22,2...|\n","| 30.80088304485715|        20.0|(26,[5,13,16,22,2...|\n","| 30.80091819012004|        23.0|(26,[5,13,15,22,2...|\n","|  28.9967687530563|        27.0|(26,[5,13,15,22,2...|\n","|  33.1243273528018|        33.0|(26,[5,13,15,22,2...|\n","+------------------+------------+--------------------+\n","only showing top 15 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4ciNTLhGyZJw"},"source":["A continuación, se evalúa el ajuste del modelo"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KQ3GZUj1ArU6","executionInfo":{"status":"ok","timestamp":1622000693320,"user_tz":300,"elapsed":27523,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"fc773f7f-1adc-4fb2-b4db-9d955b7884c4"},"source":["evaluator = RegressionEvaluator(\n","    labelCol=\"elapsed_time\", predictionCol=\"prediction\", metricName=\"rmse\")\n","rmse = evaluator.evaluate(predictions)\n","print(\"Root Mean Squared Error (RMSE) on test data = %g\" % rmse)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Root Mean Squared Error (RMSE) on test data = 6.0837\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mth-HT_2fVuq","executionInfo":{"status":"ok","timestamp":1622000718708,"user_tz":300,"elapsed":25416,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"f5de5bfc-94f4-4662-8345-1d760c52bcc4"},"source":["evaluator = RegressionEvaluator(\n","    labelCol=\"elapsed_time\", predictionCol=\"prediction\", metricName=\"mae\")\n","mae= evaluator.evaluate(predictions)\n","print(\"Mean Squared Error (MSE) on test data = %g\" % mae)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mean Squared Error (MSE) on test data = 4.21806\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eZ2wi17KwgG3","executionInfo":{"status":"ok","timestamp":1622000743137,"user_tz":300,"elapsed":24461,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"13218443-fc85-4264-ae61-98166ae4a9e3"},"source":["evaluator = RegressionEvaluator(\n","    labelCol=\"elapsed_time\", predictionCol=\"prediction\", metricName=\"r2\")\n","r2= evaluator.evaluate(predictions)\n","print(\"R2= %g\" % r2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["R2= 0.682053\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"jtsxyFRHzhR2"},"source":["Resumen del modelo desarrollado"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fCkbVLtMBCTK","executionInfo":{"status":"ok","timestamp":1622000743139,"user_tz":300,"elapsed":46,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"71188abf-c452-484c-b506-3e53eda4ceab"},"source":["rfModel = model.stages[1]\n","print(rfModel)  # summary only"],"execution_count":null,"outputs":[{"output_type":"stream","text":["RandomForestRegressionModel: uid=RandomForestRegressor_d3561ec92b55, numTrees=20, numFeatures=26\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xOVDuu3C3b8k"},"source":["Se establece el porcentaje de la influencia de cada característica en las predicciones del modelo."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"24xM1Ao90HHV","executionInfo":{"status":"ok","timestamp":1622000743756,"user_tz":300,"elapsed":656,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"30007a7f-abb7-4666-865d-3445772abff1"},"source":["bestPipeline = model\n","bestModel = bestPipeline.stages[1]\n","importances = bestModel.featureImportances\n","x_values = list(range(len(importances)))\n","plt.figure(figsize=(10, 6))\n","plt.bar(x_values, importances, orientation=\"vertical\")\n","plt.xticks(x_values, feature_list, rotation=90)\n","plt.ylabel('Importance')\n","plt.xlabel('Feature')\n","plt.title('Feature Importances')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Feature Importances')"]},"metadata":{"tags":[]},"execution_count":30},{"output_type":"display_data","data":{"image/png":"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LtX7vfPnzzv9yXHQoEH2u1tI0p49exweu/LvumjRossudzUgm/2a27hxo8P5LZ06dXKpjmTu61eSli5dqjvvvNM+GpiXl6d58+Zp6NChLtX76aef1KZNG5e+93I+/fRTRUVFXfZw0eUuWrmaMWPGKDo6Wl26dLnkw6IrvxfTp09Xr1691Lp160vW/fjjj04H77i4ONWoUUO9evVS586dHT5cTJo06YrnOF2O2ftqZr3U1FQlJydrz549atmypSIjIx3eA5z1448/aubMmapXr54Mw1B2draGDh3q0uswNzdXycnJ2rRpk2rUqKHIyEh16tTJ/rfNWadOndLcuXP1448/yjAMtW3bVoMHD3b59IrPPvvssssffPBBl+qVJwKZizIyMvS///3vkhOFPSGN7969+7LLL/cm6G65ubmX/Mw8oa+LmXX1YVFRkTZu3KisrCyHWs6+EVzp37OEKz+/iz8dm8GTX3N/BIcPH9aRI0dUVFRkX+bqRTglTp486VDPyitoy8uxY8dUr149q9soV8OHD1f16tXVrVs3tWnT5pKRLFePBhQVFSkjI0OSFBIS4hBmS2vMmDHKz89X165d1blz50tCkyfcAvF///uf/euioiJt3bpVDRo0cPminvLEIUsXTZkyRX/5y18UHR3t8lDv3Llz1aJFC7Vo0UIBAQGm9Xb06FG1atVK9evXN6WeWZflL1y4UN9//70aNmzocGVfWf9ob9u2Tb/88ovDHx9XP/2YefXhxIkTVb16dTVt2tSlN7sSZ86cUYsWLeTv7+9yjd+bNWuWcnNzFRoaqpYtW6p169ZlukT/0KFDpk21sHHjRn3yySc6efKkJJV5REu68DM8evSoCgsL7ctcfd2ZfWXvokWLtHv3bh05ckQ333yzfvjhB7Vs2dLlQLZlyxbNnz9fv/32m6677jplZ2erQYMGmjx5stO1MjMz9a9//euSsOjqvu7bt08JCQk6cuSIiouLZbPZVLVqVZf/bevVq2fa77/Z+2pWvTp16sjLy0s7duzQjh07LlnvyiDAN998ox49eqhx48aSLvx+rFy5UrfddptTdUrO7Vy+fLmSkpLsy8vyOzF9+nQNHjxYNWrUsPc2f/58lwPU3XfffcnjslxIVp4IZC7y9vZW7969y1QjODhYmzZt0sKFCyVJYWFh9oDWuHFjl8NPdna2PvzwQx0/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eKPLAa/k3pUlrxFXTxDesmWLfXTsl19+UaNGjdSiRQsNGDBALVq0cKnmb7/9pjlz5ig1NVWS1LJlSw0ePNjpezJe7VwRV9/0jh49queff15btmxRz5491b17d5fOz1q8eLEWL16swsJCDRw40N6Tr6+voqOjXepNuvBh7OLw9dBDD7l0H8ASGRkZDlfiXn/99fr1119drrd161aHkfrevXvrxRdfdOr3rGSOtvnz5zucIxoREeHSH/OSQ9k7d+603zBakvr376+4uDj97W9/c6peyXvTm2++qcmTJ19yI3pnmL2vZtcrrU8++eSagazk51SnTh2dOHFC6enpkqRmzZqV+a4pgYGBuvvuu3X33XcrIyNDKSkp9nWlCYslzL7PblRUlF599VV17NhR0oXpl3r16mVafTMRyFzUt29fTZgwQdnZ2Zo6dapSU1OdPqRSt25d3XLLQhJvugAAIABJREFULWrSpIkpoxUldu/erenTp9vfBLOzszV8+HCXJ8KcNGmSXnrpJfuVKSdOnNDbb7/t9GFBM69i6tmzp3r27Kkvv/xS9957r8O6rKwsl2pKF/5NPvvsM/sn+HXr1rl838iuXbvqww8/1NmzZ5WUlKRVq1a5FARWr16tFi1aqH///mratKkp5z7NnDlT3bt3t9+jc926dZo5c6Zee+01l+olJiY6/MG32WyaPn26nnnmGadrlbzOatSoocOHD6tWrVr2SWKdcd999+m+++7Tv/71L5enVbicypUra+/evfZpQvbu3Vume9Bef/31+uCDD+wjKevWrSvTVClVqlTRunXr7PcCTU5OdnkEv6CgwGE2/KysrDKNQBuG4fCzS01NdThPyFlm3oje7H01u961OPMBaMWKFfrss8/Upk0bGYahhIQEPfDAA6YFlZCQEIepJUoTFkuYfZ/du+66S61bt7af1D9s2DDdcMMNLtUqbwQyF7Vt21Y33HCD0tLSZBiGBg0a5PTJ+DVr1rSfkHnxm5R0YSZlV29WPG/ePI0ePdo+eWtGRobef/99l8+r6tixoyZPnqwXXnhB2dnZmjhxoh599FGn6wwaNEiFhYUaPHiwEhMT9dNPP2n48OEu9VQiJSXlkkD23nvvubyvQ4cO1aeffqr33ntP0oUrcly9R+E999yjnTt3qlq1asrIyFBsbGyp35Qu1q9fP/shu4vPvZNkn+TU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\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hfuaT6idfur-","executionInfo":{"status":"ok","timestamp":1622000755659,"user_tz":300,"elapsed":11909,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"0346d582-909e-4c73-c279-d52f20ec25a3"},"source":["X.corr(\"elapsed_time\", \"trip_distance\", method=None)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7851740239410863"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"E8AoBhxiG5p8"},"source":["df_correlation=X[[log(\"elapsed_time\"), log(\"trip_distance\")]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Srns8D4rIBX4","executionInfo":{"status":"ok","timestamp":1622000766862,"user_tz":300,"elapsed":11211,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"b22e3387-5a6c-4acc-8f58-1ffa2c7299ff"},"source":["df_correlation.corr(\"ln(trip_distance)\", \"ln(elapsed_time)\", method=None)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8269534883984677"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"markdown","metadata":{"id":"ctZSIGkHOdGO"},"source":["##**Modelo final Random Forest (variables de mayor influencia)**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zfpInL4AoLMq","executionInfo":{"status":"ok","timestamp":1622000780735,"user_tz":300,"elapsed":13903,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"3f9c8c3a-de25-4d3c-a779-63d0aaf6c810"},"source":["#Los resultados son mejores con total amount, pero la verdad considero que poner esa variable es como hacer trampa 'total_amount'\n","from pyspark.ml.feature import VectorAssembler\n","vectorAssembler = VectorAssembler(inputCols = ['pu_borough_Queens',\n","                                               \"pu_borough_Manhattan\",\n","                                               \"do_borough_Queens\",\n","                                               'do_borough_EWR',\n","                                               'do_borough_Brooklyn',\n","                                               \"do_borough_Manhattan\",\n","                                               'pu_dayname_Sunday',\n","                                               \"peak_hour_Pico_PM\",\n","                                               'peak_hour_No_pico',\n","                                               \"pu_hour\",\n","                                               'trip_distance'], outputCol = 'features')\n","vX = vectorAssembler.transform(X)\n","vX = vX.select(['features', 'elapsed_time'])\n","vX.show(3)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["+--------------------+------------+\n","|            features|elapsed_time|\n","+--------------------+------------+\n","|(11,[1,5,8,9,10],...|         3.0|\n","|(11,[1,5,8,9,10],...|        12.0|\n","|(11,[0,2,8,9,10],...|         6.0|\n","+--------------------+------------+\n","only showing top 3 rows\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"cFvkz_KvpbiK"},"source":["from pyspark.ml.regression import RandomForestRegressor\n","rf = RandomForestRegressor(labelCol=\"elapsed_time\", featuresCol=\"features\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-quul3lQpf2P"},"source":["from pyspark.ml import Pipeline\n","pipeline = Pipeline(stages=[vectorAssembler, rf])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"evFJNRMjumzr"},"source":["(trainingData, testData) = X.randomSplit([0.7, 0.3])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JlbUP0nHpvFk"},"source":["model = pipeline.fit(trainingData)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KC_lUp5qp8g2"},"source":["predictions = model.transform(testData)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hAW3i841wgTi"},"source":["A continuación, se evalúa el ajuste del modelo"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CvbYmoVmp-Qf","executionInfo":{"status":"ok","timestamp":1622000900881,"user_tz":300,"elapsed":24646,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"3b79a509-f375-4a22-9782-c93ecd07f53f"},"source":["evaluator = RegressionEvaluator(\n","    labelCol=\"elapsed_time\", predictionCol=\"prediction\", metricName=\"rmse\")\n","rmse = evaluator.evaluate(predictions)\n","print(\"Root Mean Squared Error (RMSE) on test data = %g\" % rmse)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Root Mean Squared Error (RMSE) on test data = 6.05052\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nv9QIVS_qEbr","executionInfo":{"status":"ok","timestamp":1622000924398,"user_tz":300,"elapsed":23546,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"441a4a72-8eb9-4e8a-b72f-1400ade8592c"},"source":["evaluator = RegressionEvaluator(\n","    labelCol=\"elapsed_time\", predictionCol=\"prediction\", metricName=\"mae\")\n","mae= evaluator.evaluate(predictions)\n","print(\"Mean Squared Error (MSE) on test data = %g\" % mae)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mean Squared Error (MSE) on test data = 4.212\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PZMRCcnNqHYq","executionInfo":{"status":"ok","timestamp":1622000948523,"user_tz":300,"elapsed":24147,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"de37e593-35ee-4e85-cc44-3412d93c4d7b"},"source":["evaluator = RegressionEvaluator(\n","    labelCol=\"elapsed_time\", predictionCol=\"prediction\", metricName=\"r2\")\n","r2= evaluator.evaluate(predictions)\n","print(\"R2= %g\" % r2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["R2= 0.686222\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xCGQU8MTwWzN"},"source":["Resumen del modelo desarrollado"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BzVXhX4BqLkc","executionInfo":{"status":"ok","timestamp":1622000948525,"user_tz":300,"elapsed":30,"user":{"displayName":"David Betancur Londoño","photoUrl":"https://lh6.googleusercontent.com/-bNyZ3gmiCOk/AAAAAAAAAAI/AAAAAAAAFMU/Cua3MAfvFzo/s64/photo.jpg","userId":"17014220292919096295"}},"outputId":"86783170-cf2e-4b8b-b175-49b88f9c8334"},"source":["rfModel = model.stages[1]\n","print(rfModel)  # summary only"],"execution_count":null,"outputs":[{"output_type":"stream","text":["RandomForestRegressionModel: uid=RandomForestRegressor_651aecc83c35, numTrees=20, numFeatures=11\n"],"name":"stdout"}]}]}